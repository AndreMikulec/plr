
version: 1.0.{build}.{branch}

image: Visual Studio 2015

# Do not build on tags (GitHub and BitBucket)
skip_tags: true

# Start builds on tags only (GitHub and BitBucket)
# skip_non_tags: true

# branches:
#   only:
#     - master

# Skipping commits affecting specific files (GitHub only).
skip_commits:
  files:
    - '**/*.md'
  message: /\[skip ci]/

# set clone depth
clone_depth: 1


environment:
  APPVEYOR_SAVE_CACHE_ON_ERROR: true

  # note: master, 13.0.0-0, 12.0.0-0 (exactly) will
  #  1. attempt to compile from source code
  #  AND
  #  2. run the "patch" on msvc.*.diff

  matrix:


  # compiling

  - pg: 12.0.0-0
    # APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
    # PlatformToolset: v142
    platform: x64
    configuration: Release
    rversion: 4.0.3
    # does not work in 12.0.0-0
    msvc_diff_file: msvc.diff
    USER_BUILD: MSVC

  # https://stackoverflow.com/questions/27517662/what-is-platform-toolset-setting-in-visual-studio-project
  # COMMENTS leads to . . .
  # https://en.wikipedia.org/wiki/Microsoft_Visual_C%2B%2B#Internal_version_numbering


  - pg: 13.0.0-0
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
    PlatformToolset: v142
    platform: x64
    configuration: Release
    rversion: 4.0.3
    msvc_diff_file: msvc.pg.13._try2.diff
    USER_BUILD: MSVC

#  # C:\projects\postgresql\pgsql.sln : Solution file error MSB5004: The solution file has two projects named "plr".
#  #
#  # MSBuild Error: The solution file has two projects named
#  # https://stackoverflow.com/questions/30760890/msbuild-error-the-solution-file-has-two-projects-named
#  - pg: 13.0.0-0
#    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
#    PlatformToolset: v142
#    platform: x64
#    configuration: Release
#    rversion: 4.0.3
#    msvc_diff_file: msvc.pg.13.diff
#    USER_BUILD: MSVC

  - pg: 13.0.0-0
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
    PlatformToolset: v142
    platform: x64
    configuration: Release
    rversion: 4.0.3
    msvc_diff_file: msvc.pg.13.diff
    USER_BUILD: MSVC

  # just simple binding

  - pg: 12.4-1
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
    PlatformToolset: v142
    platform: x64
    configuration: Release
    rversion: 4.0.3
    msvc_diff_file: msvc.diff
    USER_BUILD: MSVC

  - pg: 13.2-1
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
    PlatformToolset: v142
    platform: x64
    configuration: Release
    rversion: 4.0.3
    msvc_diff_file: msvc.pg.13.diff
    USER_BUILD: MSVC

  # compiling

  - pg: 12.0.0-0
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
    PlatformToolset: v142
    platform: x64
    configuration: Release
    rversion: 4.0.3
    # does not work in 12.0.0-0
    msvc_diff_file: msvc.diff
    USER_BUILD: MSVC

  ######################################

  #
  # ERROR - two plr solutions are found
  #
  - pg: master
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
    PlatformToolset: v142
    platform: x64
    configuration: Debug
    rversion: 3.6.3
    msvc_diff_file: msvc.pg.13.diff
    USER_BUILD: MSVC

  #
  # current postgres and old R
  #
  - pg: 13.2-1
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
    PlatformToolset: v142
    platform: x64
    configuration: Release
    rversion: 3.6.3
    msvc_diff_file: msvc.pg.13.diff
    USER_BUILD: MSVC

  #
  # ERROR - could not find the plr.dll
  #
  # current postgres and current R (and Debug configuration)
  #
  - pg: 13.2-1
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
    PlatformToolset: v142
    platform: x64
    configuration: Debug
    rversion: 4.0.3
    msvc_diff_file: msvc.pg.13.diff
    USER_BUILD: MSVC

  #
  # current postgres and current R (older .diff)
  #
  - pg: 13.2-1
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
    PlatformToolset: v142
    platform: x64
    configuration: Release
    rversion: 4.0.3
    msvc_diff_file: msvc.diff
    USER_BUILD: MSVC

  #
  # Last 32 bit Windows PG available and old R
  # https://www.enterprisedb.com/downloads/postgres-postgresql-downloads
  #
  - pg: 10.16-1
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
    PlatformToolset: v142
    platform: x86
    configuration: Release
    rversion: 3.6.3
    msvc_diff_file: msvc.diff
    USER_BUILD: MSVC

  #
  # Last 32 bit Windows PG available and current R
  # https://www.enterprisedb.com/downloads/postgres-postgresql-downloads
  #
  - pg: 10.16-1
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
    PlatformToolset: v142
    platform: x86
    configuration: Release
    rversion: 3.6.3
    msvc_diff_file: msvc.diff
    USER_BUILD: MSVC

  - pg: 11.9-1
    APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
    PlatformToolset: v142
    platform: x64
    configuration: Release
    rversion: 3.6.3
    msvc_diff_file: msvc.diff
    USER_BUILD: MSVC

  - pg: 9.6.13-1
    # image: Visual Studio 2015 # must! be at the ROOT
    PlatformToolset: v120
    platform: x64
    configuration: Release
    rversion: 3.6.3
    msvc_diff_file: msvc.diff
    USER_BUILD: MSVC

  - pg: master
    USER_BUILD: MSYS2

matrix:
  allow_failures:
    - pg: master

for:
-
  matrix:
    only:
      - USER_BUILD: MSVC

  environment:
    PGUSER: postgres
    PGPASSWORD: Password12!
    PGOPTIONS: -c log_error_verbosity=verbose -c log_min_messages=debug2 -c log_min_error_statement=debug2

  init: # Make %x64% available for caching
  - REM BEGIN init
  - if %PLATFORM%==x64 ( set pf=%ProgramFiles%&& set x64=-x64) else set pf=%ProgramFiles(x86)%
  - set exe=postgresql-%pg%-windows%x64%.exe
  - setx /m exe %exe%
  - REM END init

  install:
  - REM BEGIN install
  - set
  - move %msvc_diff_file% msvc.diff
  - if not exist R-%rversion%-win.exe appveyor downloadfile https://cran.r-project.org/bin/windows/base/old/%rversion%/R-%rversion%-win.exe
  - R-%rversion%-win.exe /VERYSILENT
  # We could have used RTools many R users have, but let's use msys64 existing on Appveyor intead
  #- if not exist Rtools35.exe appveyor downloadfile https://cran.r-project.org/bin/windows/Rtools/Rtools35.exe
  #- Rtools35.exe /VERYSILENT
  - Set mingw=C:\msys64\mingw
  # http://www.databasesoup.com/2016/05/changing-postgresql-version-numbering.html
  - for /f "tokens=1 delims=-" %%A in ("%pg%") do set pgversion=%%~nA
  - echo pgversion=%pgversion%
  # https://stackoverflow.com/questions/32578014/how-to-extract-version-number-in-a-windows-batch-file/32578368
  # GREAT
  # https://stackoverflow.com/questions/37627248/how-to-split-a-command-over-multiple-lines-in-appveyor-yml
  - for /F "tokens=1,2,3 delims=." %%a in ("%pg%") do (
      set Major=%%a&
      set Minor=%%b&
      set Revision=%%c)
  - echo Major=%Major%
  - echo Minor=%Minor%
  - echo Revision=%Revision%
  - set pgroot=%pf%\PostgreSQL\%pgversion%
  - echo %pgroot%
  - SET R_HOME=%ProgramFiles%\R\R-%rversion%
  - set RBIN=%PLATFORM:x86=i386%
  - SET sed=C:\msys64\usr\bin\sed
  - ps: |
      Set-PSDebug -Trace 2
      if (("master", "13.0.0-0", "12.0.0-0").Contains("$env:pg")) {
        # Visual Studio 2015 # I MAY WANT TO FIX THAT
        # https://en.wikipedia.org/wiki/Microsoft_Visual_Studio
        $env:Path += ";C:\msys64\usr\bin;C:\msys64\mingw64\bin;C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\bin\amd64"
        #
        if ("$env:pg" -eq "master") {
          git clone --depth 1 --single-branch --branch=master https://git.postgresql.org/git/postgresql.git c:\projects\postgresql
        }
        if (("13.0.0-0", "12.0.0-0").Contains("$env:pg")) {
          # tag will create a detached head, but the detached head is still is usefull
          git clone --depth 1 --single-branch --branch=REL_${env:Major}_0 https://git.postgresql.org/git/postgresql.git c:\projects\postgresql
        }
        #
        gendef - "$env:R_HOME\bin\$env:rbin\R.dll" > "R$env:PLATFORM.def" 2> $null
        lib "/def:R$env:PLATFORM.def" "/out:R$env:PLATFORM.lib" "/MACHINE:$env:PLATFORM"
        pushd c:\projects\postgresql
        cmd /c mklink /J contrib\plr $env:APPVEYOR_BUILD_FOLDER
        #
        copy          c:\projects\postgresql\src\tools\msvc\Mkvcbuild.pm c:\projects\postgresql\src\tools\msvc\Mkvcbuild.pm.before
        copy          c:\projects\postgresql\src\tools\msvc\vcregress.pl c:\projects\postgresql\src\tools\msvc\vcregress.pl.before
        #
        patch --verbose -p1 -i "$env:APPVEYOR_BUILD_FOLDER\msvc.diff"
        #
        ### perl -c ### syntax and check if can compile ##
        diff         c:\projects\postgresql\src\tools\msvc\Mkvcbuild.pm.before c:\projects\postgresql\src\tools\msvc\Mkvcbuild.pm
        type         c:\projects\postgresql\src\tools\msvc\Mkvcbuild.pm
        ### perl -c 
        diff         c:\projects\postgresql\src\tools\msvc\vcregress.pl.before c:\projects\postgresql\src\tools\msvc\vcregress.pl
        type         c:\projects\postgresql\src\tools\msvc\vcregress.pl
        #
        perl contrib\plr\buildsetup.pl
        dir
        popd
        $env:PROJ="C:\projects\postgresql\pgsql.sln"
        $env:dll="c:\projects\postgresql\$env:CONFIGURATION\plr\plr.dll"
      } else {
        $env:PROJ="plr.vcxproj"
        $env:dll="$($env:PLATFORM.replace('x86', '.'))\$env:CONFIGURATION\plr.dll"
        if (-not (Test-Path "$env:pgroot\bin")) {
          if (-not (Test-Path "$env:exe")) {
            Start-FileDownload "http://get.enterprisedb.com/postgresql/$env:exe"
          }
          & ".\$env:exe" --unattendedmodeui none --mode unattended --superpassword "$env:PGPASSWORD" --servicepassword "$env:PGPASSWORD" | Out-Null
          Stop-Service "postgresql$env:x64-$env:pgversion"
        }
      }
  - REM END install

  cache:
  - '%exe%'
  - R-%rversion%-win.exe

  build_script:
  - REM BEGIN build_script
  - msbuild /p:PlatformToolset=%PlatformToolset% /p:configuration=%CONFIGURATION% /p:platform=%PLATFORM%
            %PROJ%
            /verbosity:diagnostic /logger:"C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll"
  - dir
  - REM END build_script

  after_build:
  - REM BEGIN after_build
  - appveyor AddMessage Packing -Category Information
  - md tmp\share\extension
  - copy *.sql tmp\share\extension\
  - copy *.control tmp\share\extension\
  - copy LICENSE tmp\PLR_LICENSE
  - md tmp\lib
  - md tmp\symbols
  - copy %dll% tmp\lib
  - copy %dll:.dll=.pdb% tmp\symbols
  - dir tmp
  - set zip=plr-%APPVEYOR_REPO_COMMIT:~0,8%-pg%pgversion%-R%rversion%-%PLATFORM%-%CONFIGURATION%-%msvc_diff_file%.zip
  - 7z a -r %zip% .\tmp\* > nul
  - ps: |
      Set-PSDebug -Trace 2
      if ("$env:pg" -eq "master") {
        pushd c:\projects\postgresql\src\tools\msvc
        perl install.pl "$env:pgroot"
        popd
      }
  - dir
  - REM END after_build

  test_script:
  - REM BEGIN test_script
  - path %pgroot%\bin;%PATH%
  - ps: |
      Set-PSDebug -Trace 2
      if ("$env:pg" -eq "master") {
        Set-Content -path pg.pass -value "$env:pgpassword" -encoding ascii
        initdb -A md5 -U "$env:PGUSER" --pwfile=pg.pass C:\pgdata
        pg_ctl register -S demand -N "postgresql$env:x64-$env:pgversion" -D c:\pgdata
      } else {
        Add-AppveyorMessage "Copying the extension files to the PostgreSQL directories." -Category Information
        7z x "$env:zip" "-o$env:pgroot"
      }
  - appveyor AddMessage "Starting the database server." -Category Information
  - setx /M PATH "%R_HOME%\bin\%RBIN%;%PATH%"
  - net start postgresql%x64%-%pgversion%

  - ps: |
      Set-PSDebug -Trace 2
      Add-AppveyorTest Regression -Framework pg_regress -FileName sql\ -Outcome Running
      if (("9.3", "9.4").Contains("$env:pgversion")) {
        $env:psqlopt="--psqldir"
      } else {
        $env:psqlopt="--bindir"
      }
      $env:Outcome="Passed"
      $elapsed=(Measure-Command {
        pg_regress "$env:psqlopt=$env:pgroot\bin" --dbname=pl_regression plr `
          bad_fun opt_window do out_args 2>&1 |
          %{ if ($_ -is [System.Management.Automation.ErrorRecord]) { $_.Exception.Message } else { $_ } } |
            Out-Default
        if ($LASTEXITCODE -ne 0) {
          $env:Outcome="Failed"
        }
      }).TotalMilliseconds
      Update-AppVeyorTest Regression -Framework pg_regress -FileName sql\ -Outcome "$env:Outcome" -Duration $elapsed
      if ("$env:Outcome" -ne "Passed") {
        type regression.diffs
        $host.SetShouldExit($LastExitCode)
      }
  - dir
  - REM END test_script

  artifacts:
  - path: 'plr-*.zip'
    name: plr_zip

  deploy:
    - provider: GitHub
      release: plr-$(APPVEYOR_BUILD_VERSION)
      draft: false
      prerelease: false
      auth_token:
        secure: KzS1DumC2yBg2LGN9x3AemHFOjAdp+rD58rW5aGGpwW4Pfdwdm7AmRpYKprPY8Gs
      artifact: plr_zip
  #   on:
  #     appveyor_repo_tag: true

    - provider: FTP
      host: frs.sourceforge.net
      protocol: sftp
      username: andremikulec,andremikulec.u
      password:
        secure: 4gk4GyW4O5RooiOyGeRdoA==
      artifact: plr_zip
      folder: /home/frs/project/andremikulec
      application:
      active_mode: false


  # I run my jobs manually
  # I do not want my email filling up
  notifications:
    - provider: Email
      on_build_success: false
      on_build_failure: false
      on_build_status_changed: false

-
  matrix:
    only:
      - USER_BUILD: MSYS2

  init:
   - echo initializing something
   - echo %USER_BUILD%

  install:
  - echo installing something
  - set

  build_script:
  - echo building nothing

