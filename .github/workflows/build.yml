
# May 18, 2020
# Migrate From Travis CI to GitHub Actions
# avatar-bdemers.jpg
# Brian Demers
# First Steps to GitHub Actions
# https://developer.okta.com/blog/2020/05/18/travis-ci-to-github-actions

#
# Migrating from Travis CI to GitHub Actions
# https://docs.github.com/en/actions/learn-github-actions/migrating-from-travis-ci-to-github-actions
#

#
# Github Actions Cheat Sheet
# https://github.github.io/actions-cheat-sheet/actions-cheat-sheet.pdf
#

# Appveyor has a special YAML validator, but Github Actions does not
# YAML Lint
# http://www.yamllint.com/

#
# https://docs.github.com/en/actions/reference/events-that-trigger-workflows
#
name: plr CI
on: [push, pull_request]
jobs:
  build:
    runs-on: ubuntu-latest
    # https://docs.github.com/en/actions/learn-github-actions/managing-complex-workflows
    #
    # Expressions in job.continue-on-error
    # https://github.blog/changelog/2020-04-15-github-actions-new-workflow-features/
    strategy:
      matrix:
        #
        # https://wiki.ubuntu.com/Releases
        # e.g. Focal Fossa
        # March 2021
        # file "Package"
        # http://apt.postgresql.org/pub/repos/apt/dists/focal-pgdg/main/binary-amd64/
        #
      # pg: [13, 12, 11, 10, 9.6, 9.5]
        pg: [13]
        include:
          # simple working example
          # https://github.com/facelessuser/soupsieve/blob/ec7a491d11e69de18dd733e145efe10e3444ede8/.github/workflows/build.yml
          - pg: 13
            continue-on-error: true
#         - pg: 12
#           continue-on-error: true
#         - pg: 11
#           continue-on-error: true
#         - pg: 10
#           continue-on-error: true
#         - pg: 9.6
#           continue-on-error: true
#         - pg: 9.5
#           continue-on-error: true

    steps:
      - name: Echo site details
        env:
          PG: ${{ matrix.pg }}
        run: echo PG $PG

      # https://docs.github.com/en/actions/quickstart
      # https://github.com/actions/checkout
      #
      # Checks out a copy of your repository on the ubuntu-latest machine
      #
      - name: Checkout code
        uses: actions/checkout@v2

      - name: before_script_and_script
        env:
          PG: ${{ matrix.pg }}
        run: |
          #
          # https://wiki.ubuntu.com/Releases
          # e.g. Focal Fossa
          # March 2021
          # file "Package"
          # http://apt.postgresql.org/pub/repos/apt/dists/focal-pgdg/main/binary-amd64/
          #
          # Consider instead?
          # image: postgres
          # https://docs.github.com/en/actions/learn-github-actions/managing-complex-workflows
          #
          echo PG: $PG
          echo HOME: $HOME
          echo Name of Ubuntu version: $(lsb_release -a)
          echo Who I Am
          id
          echo Where I Am
          pwd
          echo What Contents I Have
          ls -alrt
          #
          sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
          wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
          sudo apt-get update -qq
          sudo apt-get install -qq r-base-dev acl
          sudo /etc/init.d/postgresql stop
          sudo apt-get remove --purge postgresql\*
          sudo rm -rf /etc/postgresql /var/lib/postgresql
          sudo apt-get install postgresql-$PG
          sudo apt-get install postgresql-server-dev-$PG
          echo 'local   all             postgres                                trust' | sudo tee /etc/postgresql/$PG/main/pg_hba.conf > /dev/null
          sudo setfacl -Rm u:postgres:rwx,d:u:runner:rwx /home/runner 
          sudo pg_ctlcluster $PG main reload
          echo Where I Am
          pwd
          echo What Contents I Have
          ls -alrt
          echo Where Is postres
          find / -name '*postgres' -print 2>/dev/null
          echo BEGIN PLR BUILD
          sudo pg_lsclusters
          export USE_PGXS=1
          SHLIB_LINK=-lgcov PG_CPPFLAGS="-fprofile-arcs -ftest-coverage -O0" make
          sudo  make install
          /usr/lib/postgresql/$PG/bin/pg_config
          psql --version
          make installcheck PGUSER=postgres || (cat regression.diffs && false)

      - name: after_success
        #
        # Consider instead?
        # https://www.cyberciti.biz/faq/bash-get-exit-code-of-command/
        #
        # Job status check functions
        # Returns true when none of the previous steps have failed or been canceled.
        # https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#job-status-check-functions
        #
        if: ${{ success() }}
        # Uploads code coverage to codecov.io
        run: bash <(curl -s https://codecov.io/bash)


